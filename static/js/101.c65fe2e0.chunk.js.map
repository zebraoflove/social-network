{"version":3,"file":"static/js/101.c65fe2e0.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.tsx","Validations/ValidationFindPage.ts","webpack://social-network/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","redux/usersSelectors.ts","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Paginator_selected__VJupa\",\"pageNumbers\":\"Paginator_pageNumbers__7ZL6C\",\"pageNumbersArea\":\"Paginator_pageNumbersArea__Bl2aW\",\"arrows\":\"Paginator_arrows__3ShEi\"};","import React, {useState} from \"react\";\r\nimport cn from \"classnames\"\r\nimport s from \"../Paginator/Paginator.module.css\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {validateFindPage} from \"../../../Validations/ValidationFindPage\";\r\nimport {Input_} from \"../FormControls/FormControls\";\r\nimport {FilterType, requestUsers} from \"../../../redux/usersReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AppDispatchType} from \"../../../redux/redux-store\";\r\nimport {Button} from \"antd\";\r\nimport {RightOutlined, LeftOutlined, SearchOutlined} from \"@ant-design/icons\";\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    portionSize?: number\r\n    currentPage: number\r\n    filter?: FilterType\r\n}\r\nconst Paginator: React.FC<PropsType> = ({totalUsersCount, pageSize, portionSize = 10, currentPage,\r\n                                            filter = {term: \"\", isFriend: \"All\"}}) => {\r\n    const dispatch: AppDispatchType = useDispatch()\r\n    let pagesCount: number = Math.ceil(totalUsersCount / pageSize)\r\n    let pages: Array<number> = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount: number = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = (portionNumber) * portionSize\r\n    const onPrevPortion = () => {\r\n        let currentPage = leftPortionPageNumber - portionSize\r\n        dispatch(requestUsers(currentPage, pageSize, filter))\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n    const onNextPortion = () => {\r\n        let currentPage = rightPortionPageNumber + 1\r\n        dispatch(requestUsers(currentPage, pageSize, filter))\r\n        setPortionNumber(portionNumber + 1)\r\n    }\r\n    const FindPage = () => {\r\n        const onFindPage = (values: any) => {\r\n            let currentPage = values.pageNumber\r\n            dispatch(requestUsers(currentPage, pageSize, filter))\r\n            setPortionNumber(Math.ceil(currentPage / portionSize))\r\n        }\r\n        return <Formik initialValues={{pageNumber: ''}} onSubmit={onFindPage}>\r\n            {() => (\r\n                <Form>\r\n                    <Field validate={validateFindPage(pagesCount)} name=\"pageNumber\" placeholder={`1...${pagesCount}`} component={Input_}/>\r\n                    <button type='submit'>Find</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    }\r\n    const FindFilter = () => {\r\n        const onChangeFilter = (values: FilterType) => {\r\n            dispatch(requestUsers(1, pageSize, values))\r\n        }\r\n        return <Formik enableReinitialize initialValues={{term: filter.term, isFriend: filter.isFriend}} onSubmit={onChangeFilter}>\r\n            {() => (\r\n                <Form>\r\n                    <Field name=\"term\" placeholder={`Type username`} component={Input_}/>\r\n                    <Field name=\"isFriend\" as=\"select\">\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"Followed\">Followed</option>\r\n                        <option value=\"NotFollowed\">Not followed</option>\r\n                    </Field>\r\n                    <button type=\"submit\">Find</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    }\r\n    return <div className={s.pageNumbersArea}>\r\n        {portionNumber > 1 && <Button className={s.arrows} onClick={onPrevPortion} icon={<LeftOutlined />}/>}\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span key={p} className={cn({[s.selected] : currentPage === p}, s.pageNumbers)}\r\n                             onClick={() => {dispatch(requestUsers(p, pageSize, filter))}}>{p}</span>\r\n            })}\r\n        {portionNumber < portionCount && <Button className={s.arrows} onClick={onNextPortion} classNames={s.arrow} icon={<RightOutlined />}/>}\r\n        <FindPage/>\r\n        <FindFilter/>\r\n    </div>\r\n}\r\nexport default Paginator","export const validateFindPage = (pageCount: number) => (value: number) => {\r\n    let error\r\n    if (!value) {\r\n        error = 'Required'\r\n    } else if (!/^[0-9]{1,10}$/i.test(value.toString())) {\r\n        error = 'Incorrect symbols'\r\n    } else if (value < 1 || value > pageCount) {\r\n        error = 'Out of bounds'\r\n    }\r\n    return error\r\n}\r\nexport const validateFindTerm = (value: string) => {\r\n    let error\r\n    if (!value) {\r\n        error = 'Required'\r\n    }\r\n    return error\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userBlock\":\"User_userBlock__8AOoM\",\"followBlock\":\"User_followBlock__gVlaJ\",\"round\":\"User_round__zcJZ5\",\"infoBlock\":\"User_infoBlock__6IVxd\",\"name\":\"User_name__QVH0B\",\"status\":\"User_status__55oVY\"};","import s from './User.module.css'\r\nimport React from \"react\";\r\nimport userPhoto from '../../../Assets/Images/user.jpg'\r\nimport {Link} from \"react-router-dom\";\r\nimport {UserType} from \"../../../Types/types\";\r\nimport {Button} from \"antd\";\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    followUser: (id: number) => void\r\n    unfollowUser: (id: number) => void\r\n}\r\nconst User: React.FC<PropsType> = ({user, followingInProgress, followUser, unfollowUser}) => {\r\n    return <div>\r\n        <div key={user.id} className={s.userBlock}>\r\n                    <div className={s.followBlock}>\r\n                        <Link to={'/profile/' + user.id}><img alt='user' className={s.round}\r\n                                                              src={user.photos.small ? user.photos.small : userPhoto}/></Link>\r\n                        <div>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress.some(FiPid => FiPid === user.id)} onClick={() => {\r\n                                    unfollowUser(user.id)\r\n                                }}>UNFOLLOW</Button> :\r\n                                <Button disabled={followingInProgress.some(FiPid => FiPid === user.id)} onClick={() => {\r\n                                    followUser(user.id)\r\n                                }}>FOLLOW</Button>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.infoBlock}>\r\n                        <div className={s.name}>{user.name}</div>\r\n                        <div className={s.status}>{user.status}</div>\r\n                    </div>\r\n                </div>\r\n    </div>\r\n}\r\nexport default User","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsersS = createSelector(getUsersSelector,(users)=>{\r\n    return users.filter(u => true)\r\n})\r\nexport const getPageSizeS = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCountS = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPageS = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetchedS = (state: AppStateType) => {\r\n    return state.usersPage.isFetched\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getFilterS = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}","import s from './Users.module.css'\r\nimport React, {useEffect} from \"react\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPageS,\r\n    getFilterS, getFollowingInProgress,\r\n    getIsFetchedS,\r\n    getPageSizeS,\r\n    getTotalUsersCountS,\r\n    getUsersS\r\n} from \"../../redux/usersSelectors\";\r\nimport {requestUsers, followUser, unfollowUser, FilterType} from \"../../redux/usersReducer\";\r\nimport {AppDispatchType} from \"../../redux/redux-store\";\r\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\r\nimport {FollowedType} from \"../../Types/types\";\r\n\r\nconst Users: React.FC = () => {\r\n    const totalUsersCount = useSelector(getTotalUsersCountS)\r\n    const pageSize = useSelector(getPageSizeS)\r\n    const isFetched = useSelector(getIsFetchedS)\r\n    const currentPage = useSelector(getCurrentPageS)\r\n    const users = useSelector(getUsersS)\r\n    const filter = useSelector(getFilterS)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n    const dispatch: AppDispatchType = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n    useEffect(() => {\r\n        let sighExistArray: Array<boolean> = [false, false, false]\r\n        let sighArray: Array<string> = ['', '', '']\r\n        let friendStr = ''\r\n        if (filter.isFriend !== 'All') {\r\n            friendStr = `friend=${filter.isFriend}`\r\n            sighExistArray[0] = true\r\n        }\r\n        let termStr = ''\r\n        if (filter.term !== '') {\r\n            termStr = `term=${filter.term}`\r\n            sighExistArray[1] = true\r\n        }\r\n        let pageStr = ''\r\n        if (currentPage !== 1) {\r\n            pageStr = `page=${currentPage}`\r\n            sighExistArray[2] = true\r\n        }\r\n        if(sighExistArray[0] || sighExistArray[1] || sighExistArray[2]) {\r\n            sighArray[0] = '?'\r\n            if((sighExistArray[0] && sighExistArray[1]) || (sighExistArray[0] && sighExistArray[2])) {\r\n                sighArray[1] = '&'\r\n                if (sighExistArray[1] && sighExistArray[2]) sighArray[2] = '&'\r\n            }\r\n        }\r\n        navigate(`/users${sighArray[0]}${friendStr}${sighArray[1]}${termStr}${sighArray[2]}${pageStr}`)\r\n    }, [filter, currentPage, navigate])\r\n    useEffect(() => {\r\n        const queryPage = Number(searchParams.get(\"page\"))\r\n        const queryTerm = String(searchParams.get(\"term\"))\r\n        const queryIsFriend = searchParams.get(\"friend\") as FollowedType\r\n        let actualPage = currentPage\r\n        let actualFilter: FilterType = filter\r\n        if(queryPage) actualPage = queryPage\r\n        if(queryTerm && queryTerm !== 'null') actualFilter = {...actualFilter, term: queryTerm}\r\n        if(queryIsFriend) actualFilter = {...actualFilter, isFriend: queryIsFriend}\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n    const follow = (id: number) => {\r\n        dispatch(followUser(id))\r\n    }\r\n    const unfollow = (id: number) => {\r\n        dispatch(unfollowUser(id))\r\n    }\r\n    return <div>\r\n        {isFetched ? <Preloader/> : null}\r\n        <Paginator portionSize={10} totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                   currentPage={currentPage} filter={filter}/>\r\n        {users.map(u => <User user={u} key={u.id} followUser={follow}\r\n                                 unfollowUser={unfollow} followingInProgress={followingInProgress}/>)}\r\n    </div>\r\n}\r\nexport default Users","import Users from \"./Users\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nconst UsersPage = () => {\r\n        return <Users/>\r\n}\r\nexport default withAuthRedirect(UsersPage)"],"names":["_ref","totalUsersCount","pageSize","portionSize","currentPage","filter","term","isFriend","dispatch","useDispatch","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","useState","leftPortionPageNumber","rightPortionPageNumber","FindPage","_jsx","Formik","initialValues","pageNumber","onSubmit","values","requestUsers","children","_jsxs","Form","Field","validate","pageCount","value","error","test","toString","name","placeholder","concat","component","Input_","type","FindFilter","enableReinitialize","as","className","s","pageNumbersArea","Button","arrows","onClick","onPrevPortion","icon","LeftOutlined","p","map","cn","selected","pageNumbers","onNextPortion","classNames","arrow","RightOutlined","user","followingInProgress","followUser","unfollowUser","Link","to","id","alt","src","photos","small","userPhoto","followed","disabled","some","FiPid","status","getUsersS","createSelector","state","usersPage","users","u","getPageSizeS","getTotalUsersCountS","getCurrentPageS","getIsFetchedS","isFetched","getFollowingInProgress","getFilterS","Users","useSelector","navigate","useNavigate","searchParams","setSearchParams","useSearchParams","useEffect","sighExistArray","sighArray","friendStr","termStr","pageStr","queryPage","Number","get","queryTerm","String","queryIsFriend","actualPage","actualFilter","follow","unfollow","Preloader","Paginator","User","withAuthRedirect","UsersPage"],"sourceRoot":""}